package modelo;
// Generated 10-11-2020 13:52:40 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pedido generated by hbm2java
 */
@Entity
@Table(name="pedido"
    ,catalog="deliveryduoc"
)
public class Pedido  implements java.io.Serializable {


     private Integer idPedido;
     private Estado estado;
     private MetodoPago metodoPago;
     private TipoEntrega tipoEntrega;
     private Ubicacion ubicacion;
     private Usuario usuario;
     private Date fechaventa;
     private int total;
     private String detalleUbicacion;
     private Set<DetallePedido> detallePedidos = new HashSet<DetallePedido>(0);

    public Pedido() {
    }

	
    public Pedido(Estado estado, MetodoPago metodoPago, TipoEntrega tipoEntrega, Ubicacion ubicacion, Usuario usuario, Date fechaventa, int total) {
        this.estado = estado;
        this.metodoPago = metodoPago;
        this.tipoEntrega = tipoEntrega;
        this.ubicacion = ubicacion;
        this.usuario = usuario;
        this.fechaventa = fechaventa;
        this.total = total;
    }
    public Pedido(Estado estado, MetodoPago metodoPago, TipoEntrega tipoEntrega, Ubicacion ubicacion, Usuario usuario, Date fechaventa, int total, String detalleUbicacion, Set<DetallePedido> detallePedidos) {
       this.estado = estado;
       this.metodoPago = metodoPago;
       this.tipoEntrega = tipoEntrega;
       this.ubicacion = ubicacion;
       this.usuario = usuario;
       this.fechaventa = fechaventa;
       this.total = total;
       this.detalleUbicacion = detalleUbicacion;
       this.detallePedidos = detallePedidos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_pedido", unique=true, nullable=false)
    public Integer getIdPedido() {
        return this.idPedido;
    }
    
    public void setIdPedido(Integer idPedido) {
        this.idPedido = idPedido;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_estado", nullable=false)
    public Estado getEstado() {
        return this.estado;
    }
    
    public void setEstado(Estado estado) {
        this.estado = estado;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_metodo_pago", nullable=false)
    public MetodoPago getMetodoPago() {
        return this.metodoPago;
    }
    
    public void setMetodoPago(MetodoPago metodoPago) {
        this.metodoPago = metodoPago;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_entrega", nullable=false)
    public TipoEntrega getTipoEntrega() {
        return this.tipoEntrega;
    }
    
    public void setTipoEntrega(TipoEntrega tipoEntrega) {
        this.tipoEntrega = tipoEntrega;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_ubicacion", nullable=false)
    public Ubicacion getUbicacion() {
        return this.ubicacion;
    }
    
    public void setUbicacion(Ubicacion ubicacion) {
        this.ubicacion = ubicacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_usuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fechaventa", nullable=false, length=10)
    public Date getFechaventa() {
        return this.fechaventa;
    }
    
    public void setFechaventa(Date fechaventa) {
        this.fechaventa = fechaventa;
    }

    
    @Column(name="total", nullable=false)
    public int getTotal() {
        return this.total;
    }
    
    public void setTotal(int total) {
        this.total = total;
    }

    
    @Column(name="detalle_ubicacion", length=100)
    public String getDetalleUbicacion() {
        return this.detalleUbicacion;
    }
    
    public void setDetalleUbicacion(String detalleUbicacion) {
        this.detalleUbicacion = detalleUbicacion;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pedido")
    public Set<DetallePedido> getDetallePedidos() {
        return this.detallePedidos;
    }
    
    public void setDetallePedidos(Set<DetallePedido> detallePedidos) {
        this.detallePedidos = detallePedidos;
    }




}


